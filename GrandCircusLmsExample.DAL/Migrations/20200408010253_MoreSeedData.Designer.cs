// <auto-generated />
using System;
using GrandCircusLmsExample.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GrandCircusLmsExample.DAL.Migrations
{
    [DbContext(typeof(GrandCircusLmsExampleContext))]
    [Migration("20200408010253_MoreSeedData")]
    partial class MoreSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GrandCircusLmsExample.DAL.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Credits");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<int>("LocationId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 4, 7, 21, 2, 52, 50, DateTimeKind.Local).AddTicks(9574),
                            Credits = 4,
                            LastUpdatedDate = new DateTime(2020, 4, 7, 21, 2, 52, 50, DateTimeKind.Local).AddTicks(9585),
                            LocationId = 1,
                            Name = "C# Back-end"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 4, 7, 21, 2, 52, 50, DateTimeKind.Local).AddTicks(9617),
                            Credits = 3,
                            LastUpdatedDate = new DateTime(2020, 4, 7, 21, 2, 52, 50, DateTimeKind.Local).AddTicks(9620),
                            LocationId = 1,
                            Name = "Coolest Front End Ever"
                        });
                });

            modelBuilder.Entity("GrandCircusLmsExample.DAL.Models.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Grade");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<int>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            CreatedDate = new DateTime(2020, 4, 7, 21, 2, 52, 51, DateTimeKind.Local).AddTicks(1457),
                            LastUpdatedDate = new DateTime(2020, 4, 7, 21, 2, 52, 51, DateTimeKind.Local).AddTicks(1468),
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            CreatedDate = new DateTime(2020, 4, 7, 21, 2, 52, 51, DateTimeKind.Local).AddTicks(1495),
                            LastUpdatedDate = new DateTime(2020, 4, 7, 21, 2, 52, 51, DateTimeKind.Local).AddTicks(1499),
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 1,
                            CreatedDate = new DateTime(2020, 4, 7, 21, 2, 52, 51, DateTimeKind.Local).AddTicks(1503),
                            LastUpdatedDate = new DateTime(2020, 4, 7, 21, 2, 52, 51, DateTimeKind.Local).AddTicks(1506),
                            StudentId = 3
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 1,
                            CreatedDate = new DateTime(2020, 4, 7, 21, 2, 52, 51, DateTimeKind.Local).AddTicks(1510),
                            LastUpdatedDate = new DateTime(2020, 4, 7, 21, 2, 52, 51, DateTimeKind.Local).AddTicks(1513),
                            StudentId = 4
                        });
                });

            modelBuilder.Entity("GrandCircusLmsExample.DAL.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("FirstName");

                    b.Property<string>("GCIdentificationNumbe");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<string>("OfficeNumber");

                    b.HasKey("Id");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            DateOfBirth = new DateTime(1984, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sean",
                            GCIdentificationNumbe = "101",
                            LastName = "Armstrong",
                            LastUpdatedDate = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            OfficeNumber = "A1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            DateOfBirth = new DateTime(1986, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Albert",
                            GCIdentificationNumbe = "102",
                            LastName = "Ngoudjou",
                            LastUpdatedDate = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            OfficeNumber = "C3"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            DateOfBirth = new DateTime(1991, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Tommy",
                            GCIdentificationNumbe = "102",
                            LastName = "Waalkes",
                            LastUpdatedDate = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            OfficeNumber = "AA5"
                        });
                });

            modelBuilder.Entity("GrandCircusLmsExample.DAL.Models.InstructorCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<int>("InstructorId");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("InstructorId");

                    b.ToTable("InstructorCourse");
                });

            modelBuilder.Entity("GrandCircusLmsExample.DAL.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<string>("Name");

                    b.Property<string>("State");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "40 Pearl St NW",
                            City = "Grand Rapids",
                            CreatedDate = new DateTime(2020, 4, 7, 21, 2, 52, 50, DateTimeKind.Local).AddTicks(7059),
                            LastUpdatedDate = new DateTime(2020, 4, 7, 21, 2, 52, 50, DateTimeKind.Local).AddTicks(7070),
                            Name = "Start Garden",
                            State = "Michigan"
                        });
                });

            modelBuilder.Entity("GrandCircusLmsExample.DAL.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("DeclaredMajor");

                    b.Property<string>("FirstName");

                    b.Property<string>("GCIdentificationNumbe");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            DateOfBirth = new DateTime(1995, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeclaredMajor = "Computer Science",
                            FirstName = "Jake",
                            GCIdentificationNumbe = "12001",
                            LastName = "Collins",
                            LastUpdatedDate = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            DateOfBirth = new DateTime(1994, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeclaredMajor = "Computer Science",
                            FirstName = "Austin",
                            GCIdentificationNumbe = "12002",
                            LastName = "Powel",
                            LastUpdatedDate = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            DateOfBirth = new DateTime(1998, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeclaredMajor = "Computer Science",
                            FirstName = "Dylan",
                            GCIdentificationNumbe = "12003",
                            LastName = "Rule",
                            LastUpdatedDate = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            DateOfBirth = new DateTime(1997, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeclaredMajor = "Computer Science",
                            FirstName = "Andrew",
                            GCIdentificationNumbe = "12004",
                            LastName = "Waltman",
                            LastUpdatedDate = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("GrandCircusLmsExample.DAL.Models.Course", b =>
                {
                    b.HasOne("GrandCircusLmsExample.DAL.Models.Location", "Location")
                        .WithMany("Courses")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GrandCircusLmsExample.DAL.Models.Enrollment", b =>
                {
                    b.HasOne("GrandCircusLmsExample.DAL.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GrandCircusLmsExample.DAL.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GrandCircusLmsExample.DAL.Models.InstructorCourse", b =>
                {
                    b.HasOne("GrandCircusLmsExample.DAL.Models.Course", "Course")
                        .WithMany("InstructorCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GrandCircusLmsExample.DAL.Models.Instructor", "Instructor")
                        .WithMany("InstructorCourses")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
